name: ci

on: [push]

jobs:
  CI:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run image
        uses: abatilo/actions-poetry@v2.3.0
        with:
          poetry-version: 1.8.4
      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        id: cache
        with:
          path: ~/.virtualenvs
          key: venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: list env contents
        run: |
          poetry show
          pip list

      - name: Test with pytest
        run: poetry run pytest --cov --cov=src/dfastbe --cov-report term-missing -m "not e2e and not binaries"

      - uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}

       - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              with:
                projectBaseDir: .
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
